---


const currentLocale = Astro.currentLocale;
const isEnglish = currentLocale === 'en';

const contactText = isEnglish ? 'CONTACT' : 'CONTACTO';

const navItems = isEnglish ? [
  { href: '#inicio', text: 'HOME' },
  { href: '#festivales', text: 'FEST' },
  { href: '#party', text: 'PARTY' },
  { href: '#prom', text: 'PROM' },
  { href: '#nodo', text: 'NODO' },
  { href: '#spot', text: 'SPOT' },
  { href: '#contacto', text: 'FORM' },
] : [
  { href: '#inicio', text: 'INICIO' },
  { href: '#festivales', text: 'FEST' },
  { href: '#party', text: 'PARTY' },
  { href: '#prom', text: 'PROM' },
  { href: '#nodo', text: 'NODO' },
  { href: '#spot', text: 'SPOT' },
  { href: '#contacto', text: 'FORMULARIO' },
];
---

<header id="header" class="fixed top-0 left-0 w-full z-50 bg-black/90 backdrop-blur-sm border-b border-primary/20">
  <div class="max-w-7xl mx-auto px-4 sm:px-6">
    <div class="flex items-center justify-between py-6">
      <a href="/" class="flex items-center" id="logo-link">
        <img src="/images/retorica.png" alt="RetÃ³rica Logo" class="h-16 w-auto animate-fade-in" />
      </a>

      <!-- Desktop Navigation -->
      <nav class="hidden md:flex items-center space-x-4">
        {navItems.map((item, index) => (
          <>
            <a href={item.href} class="text-white hover:text-yellow-400 transition-colors duration-200 uppercase">{item.text}</a>
            {(index === 0 || index === 5) && index < navItems.length - 1 && <span class="text-white/50">|</span>}
          </>
        ))}
      </nav>

      <!-- Mobile Menu Button -->
      <button id="mobile-menu-btn" class="md:hidden text-white p-2">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>

      <!-- Contact Button -->
      <button id="contact-btn" class="hidden md:inline-block text-white hover:text-yellow-400 hover:bg-yellow-400/10 transition px-2 py-1 rounded uppercase">{contactText}</button>

      <!-- Language Selector -->
      <a href={isEnglish ? '/' : '/en'} class="hidden md:inline-block text-white hover:text-yellow-400 transition px-0 text-lg">{isEnglish ? 'ðŸ‡ªðŸ‡¸' : 'ðŸ‡ºðŸ‡¸'}</a>

      <!-- Mobile Menu -->
      <div id="mobile-menu" class="md:hidden absolute top-full left-0 w-full bg-black border-t border-primary/20 hidden z-50">
        <div class="flex flex-col py-4">
          {navItems.map((item) => (
            <a href={item.href} class="text-white py-2 px-4 hover:bg-yellow-500 transition">{item.text}</a>
          ))}
          <a href="#contacto" class="text-white py-2 px-4 hover:bg-yellow-500 transition">{contactText}</a>
          <a href={isEnglish ? '/' : '/en'} class="text-white py-2 px-4 hover:bg-yellow-500 transition">{isEnglish ? 'ðŸ‡ªðŸ‡¸' : 'ðŸ‡ºðŸ‡¸'}</a>
        </div>
      </div>

    </div>

  </div>

</header>

<script>
document.addEventListener('DOMContentLoaded', () => {
  // Contact button - scroll to footer
  const contactBtn = document.getElementById('contact-btn') as HTMLButtonElement | null;
  if (contactBtn) {
    contactBtn.addEventListener('click', () => {
      const footer = document.querySelector('footer');
      if (footer) {
        footer.scrollIntoView({ behavior: 'smooth' });
      }
    });
  }

  // Mobile contact link - scroll to footer
  const mobileContactLink = document.querySelector('#mobile-menu a[href="#contacto"]');
  if (mobileContactLink) {
    mobileContactLink.addEventListener('click', (e) => {
      e.preventDefault();
      const footer = document.querySelector('footer');
      if (footer) {
        footer.scrollIntoView({ behavior: 'smooth' });
      }
      closeMobileMenu();
    });
  }

  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById('mobile-menu-btn') as HTMLButtonElement | null;
  const mobileMenu = document.getElementById('mobile-menu') as HTMLDivElement | null;
  if (mobileMenuBtn && mobileMenu) {
    mobileMenuBtn.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
    });
  }

  // Close mobile menu on link click
  const mobileMenuLinks = document.querySelectorAll('#mobile-menu a');
  mobileMenuLinks.forEach(link => {
    link.addEventListener('click', closeMobileMenu);
  });

  // Logo click to refresh page
  const logoLink = document.getElementById('logo-link') as HTMLAnchorElement | null;
  if (logoLink) {
    logoLink.addEventListener('click', (e) => {
      e.preventDefault();
      window.location.reload();
    });
  }
});

function closeMobileMenu() {
  const mobileMenu = document.getElementById('mobile-menu') as HTMLDivElement | null;
  if (mobileMenu) {
    mobileMenu.classList.add('hidden');
  }
}
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fadeIn 1.5s ease-out;
  }
</style>
