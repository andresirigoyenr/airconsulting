---


const currentLocale = Astro.currentLocale;
const isEnglish = currentLocale === 'en';

const navItems = isEnglish ? [
  { href: '#about', text: 'ABOUT US' },
  { href: '#services', text: 'SERVICES' },
  { href: '#case-studies', text: 'CASE STUDIES' },
  { href: '/blog', text: 'BLOG' },
] : [
  { href: '#sobre-nosotros', text: 'SOBRE NOSOTROS' },
  { href: '#servicios', text: 'SERVICIOS' },
  { href: '#casos-exito', text: 'CASOS DE Ã‰XITO' },
  { href: '/blog', text: 'BLOG' },
];
---

<header id="header" class="fixed top-0 left-0 w-full z-50 bg-black/20 backdrop-blur-md">
   <div class="max-w-7xl mx-auto px-4 sm:px-6">
     <div class="flex items-center justify-between py-8">
       <a href="/" class="flex items-center" id="logo-link">
         <img src="/images/logo.png" alt="AIRconsulting - Agencia de marketing digital en CÃ¡diz" class="h-20 w-auto animate-fade-in" />
       </a>

       <!-- Desktop Navigation -->
       <nav class="hidden md:flex items-center space-x-8">
         {navItems.map((item) => (
           <a href={item.href} class="text-gray-300 hover:text-orange-400 hover:underline transition-all duration-300 uppercase text-xl font-light tracking-wider">{item.text}</a>
         ))}
         <a href={isEnglish ? '/' : '/en'} class="text-gray-300 hover:text-orange-400 transition-colors duration-300 text-xl">{isEnglish ? 'ðŸ‡ªðŸ‡¸' : 'ðŸ‡ºðŸ‡¸'}</a>
       </nav>

      <!-- Mobile Menu Button -->
      <button id="mobile-menu-btn" class="md:hidden text-white p-2">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16"></path>
        </svg>
      </button>

      <!-- Mobile Menu -->
      <div id="mobile-menu" class="md:hidden fixed inset-0 bg-black/80 backdrop-blur-md hidden z-50 flex items-center justify-center">
        <div class="flex flex-col space-y-8 text-center">
          {navItems.map((item) => (
            <a href={item.href} class="text-gray-300 hover:text-orange-400 hover:underline transition-all duration-300 uppercase text-xl font-light tracking-wider" onclick="closeMobileMenu()">{item.text}</a>
          ))}
          <a href={isEnglish ? '/' : '/en'} class="text-gray-300 hover:text-orange-400 transition-colors duration-300 text-2xl" onclick="closeMobileMenu()">{isEnglish ? 'ðŸ‡ªðŸ‡¸' : 'ðŸ‡ºðŸ‡¸'}</a>
        </div>
      </div>

    </div>

  </div>

</header>

<script>
document.addEventListener('DOMContentLoaded', () => {

  // Mobile menu toggle
  const mobileMenuBtn = document.getElementById('mobile-menu-btn') as HTMLButtonElement | null;
  const mobileMenu = document.getElementById('mobile-menu') as HTMLDivElement | null;
  if (mobileMenuBtn && mobileMenu) {
    mobileMenuBtn.addEventListener('click', () => {
      mobileMenu.classList.toggle('hidden');
      document.body.classList.toggle('overflow-hidden');
    });
  }

  // Desktop navigation accordion toggle
  const desktopNavToggle = document.getElementById('desktop-nav-toggle') as HTMLButtonElement | null;
  const desktopNav = document.getElementById('desktop-nav') as HTMLDivElement | null;
  if (desktopNavToggle && desktopNav) {
    desktopNavToggle.addEventListener('click', () => {
      desktopNav.classList.toggle('hidden');
    });
  }

  // Close mobile menu on link click
  const mobileMenuLinks = document.querySelectorAll('#mobile-menu a');
  mobileMenuLinks.forEach(link => {
    link.addEventListener('click', () => {
      closeMobileMenu();
      document.body.classList.remove('overflow-hidden');
    });
  });

  // Logo click to refresh page
  const logoLink = document.getElementById('logo-link') as HTMLAnchorElement | null;
  if (logoLink) {
    logoLink.addEventListener('click', (e) => {
      e.preventDefault();
      window.location.reload();
    });
  }
});

function closeMobileMenu() {
  const mobileMenu = document.getElementById('mobile-menu') as HTMLDivElement | null;
  if (mobileMenu) {
    mobileMenu.classList.add('hidden');
    document.body.classList.remove('overflow-hidden');
  }
}
</script>

<style>
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .animate-fade-in {
    animation: fadeIn 1.5s ease-out;
  }
</style>
